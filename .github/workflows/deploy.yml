name: Build and Deploy Docker Image

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      security-events: write
      deployments: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/meteo:latest

    - name: Generate dependency snapshot
      run: mvn dependency:tree -DoutputType=json -DoutputFile=dependencies.json

    - name: Submit dependency snapshot
      run: |
        if [ -f dependencies.json ]; then
          curl -X POST \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Content-Type: application/json" \
          -d @dependencies.json \
          https://api.github.com/repos/${{ github.repository }}/dependency-graph/snapshots
        else
          echo "dependencies.json file not found."
          exit 1
        fi

  deploy:
    runs-on: ubuntu-latest
    needs: build

    permissions:
      contents: read
      packages: read
      deployments: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Create .kube directory
        run: |
          mkdir -p $HOME/.kube

      - name: Set up Kubeconfig
        run: |
          echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 --decode > $HOME/.kube/config
    

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/deployment.yaml